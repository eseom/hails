#!/usr/bin/env node
require('../tools/babel-require')

const spawn = require('child_process').spawn
const logger = require('../lib/logger')

const command = process.argv[2]
const sequelizeCli = `${__dirname}/../node_modules/.bin/sequelize`


const execSequelize = (c) => {
  const call = spawn(sequelizeCli, [c, ...process.argv.slice(3)])
  call.stdout.on('data', (data) => {
    data.toString().trim().split('\n').forEach((d) => {
      logger.info(d)
    })
  })
  call.stderr.on('data', (data) => {
    data.toString().trim().split('\n').forEach((d) => {
      logger.error(d)
    })
  })
}

switch (command) {
  case 'run':
    require('../lib/runner')
    break
  case 'db:up':
    execSequelize('db:migrate')
    break
  case 'db:down':
    execSequelize('db:migrate:undo')
    break
  case 'db:status':
    execSequelize('db:migrate:status')
    break
  case 'db:create':
    execSequelize('migration:create')
    break
  case 'db:seed:up':
    execSequelize('db:seed:all')
    break
  case 'db:seed:down':
    execSequelize('db:seed:undo')
    break
  case 'db:seed:create':
    execSequelize('seed:create')
    break
  default:
    break
}
